import os
from dotenv import load_dotenv
from flask import Flask, request, jsonify
from flask_cors import CORS
from google.cloud import aiplatform

# Load environment variables
load_dotenv()

# Initialize Flask app
app = Flask(__name__)
CORS(app, resources={r"/api/*": {"origins": "http://localhost:5175"}})

# Configure Google Cloud AI
GOOGLE_API_KEY = os.getenv('GOOGLE_API_KEY')
PROJECT_ID = os.getenv('PROJECT_ID')
LOCATION = os.getenv('LOCATION')  # e.g., 'us-central1'
MODEL_ID = os.getenv('MODEL_ID')  # Your model ID

def to_gemini(prompt):
    try:
        aiplatform.init(project=PROJECT_ID, location=LOCATION)
        model = aiplatform.Model(model_name=MODEL_ID)
        response = model.predict([prompt])
        return response[0]  # Assuming the response is a list of results
    except Exception as e:
        print(f"Error in to_gemini: {e}")
        return str(e)

@app.route('/api/save-data', methods=['POST'])
def save_data():
    try:
        data = request.get_json()
        prompt = f"On a scale of 1(being very low risk) to 100(being very high risk) do an estimate of how much is the following company at risk of a cyber attack? Return only the number {data}"
        response = to_gemini(prompt)
        
        # Extract the risk score from the response
        risk_score = int(response.strip())
        
        return jsonify({'message': 'Data received', 'risk_score': risk_score}), 200
    except Exception as e:
        print(f"Error in save_data: {e}")
        return jsonify({'error': str(e)}), 500

if __name__ == '__main__':
    app.run(port=5001, debug=True)
