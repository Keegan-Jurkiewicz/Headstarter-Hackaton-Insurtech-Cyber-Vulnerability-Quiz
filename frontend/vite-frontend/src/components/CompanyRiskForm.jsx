import React, { useState } from 'react';

function CompanyRiskForm({ onSubmit }) {
  const [employeeCount, setEmployeeCount] = useState('');
  const [endpointCount, setEndpointCount] = useState('');
  const [networkComplexity, setNetworkComplexity] = useState('');
  const [industry, setIndustry] = useState('');
  const [hasResponsePlan, setHasResponsePlan] = useState('');
  const [hasFirewalls, setHasFirewalls] = useState('');
  const [hasMultiFactAuthentic, setHasMultiFactAuthentic] = useState('');
  const [dataType, setDataType] = useState('');
  const [dataVolume, setDataVolume] = useState('');
  const [cyberAttackHistory, setCyberAttackHistory] = useState('');

  const handleSubmit = (e) => {
    e.preventDefault();
    const formData = {
      employeeCount,
      endpointCount,
      networkComplexity,
      industry,
      hasResponsePlan,
      hasFirewalls,
      hasMultiFactAuthentic,
      dataType,
      dataVolume,
      cyberAttackHistory,
    };
    onSubmit(formData);
  };

  return (
    <form onSubmit={handleSubmit} className="company-size-form">
      <div className="mb-3">
        <label htmlFor="employeeCount" className="form-label">1. Number of Employees</label>
        <input 
          type="number" 
          className="form-control" 
          id="employeeCount" 
          value={employeeCount} 
          onChange={(e) => setEmployeeCount(e.target.value)} 
          required 
        />
      </div>
      <div className="mb-3">
        <label htmlFor="endpointCount" className="form-label">2. Number of Endpoints</label>
        <input 
          type="number" 
          className="form-control" 
          id="endpointCount" 
          value={endpointCount} 
          onChange={(e) => setEndpointCount(e.target.value)} 
          required 
        />
      </div>
      <div className="mb-3">
        <label htmlFor="networkComplexity" className="form-label">3. Network Complexity</label>
        <input 
          type="range" 
          className="form-range" 
          id="networkComplexity" 
          value={networkComplexity} 
          onChange={(e) => setNetworkComplexity(e.target.value)} 
          min="0" 
          max="100" 
          step="1" 
        />
        <div>Complexity: {networkComplexity}</div>
      </div>
      <div className="mb-3">
        <label htmlFor="industry" className="form-label">4. Industry</label>
        <select 
          className="form-select" 
          id="industry" 
          value={industry} 
          onChange={(e) => setIndustry(e.target.value)} 
          required
        >
          <option value="">Select an industry</option>
          <option value="Finance">Finance</option>
          <option value="Healthcare">Healthcare</option>
          <option value="Government">Government</option>
          <option value="Security">Security</option>
          <option value="Risk Management">Risk Management</option>
          <option value="Other(High Risk Field)">Other(High Risk Field)</option>
          <option value="Other(Low Risk Field)">Other(Low Risk Field)</option>
        </select>
      </div>
      <div className="mb-3">
        <label className="form-label">5. Has response plan for Cyber Attacks</label>
        <div>
          <div className="form-check">
            <input 
              type="radio" 
              className="form-check-input" 
              id="responsePlanYes" 
              name="hasResponsePlan" 
              value="Yes" 
              checked={hasResponsePlan === 'Yes'}
              onChange={() => setHasResponsePlan('Yes')}
            />
            <label className="form-check-label" htmlFor="hasResponsePlanYes">Yes</label>
          </div>
          <div className="form-check">
            <input 
              type="radio" 
              className="form-check-input" 
              id="responsePlanNo" 
              name="hasResponsePlan" 
              value="No" 
              checked={hasResponsePlan === 'No'}
              onChange={() => setHasResponsePlan('No')}
            />
            <label className="form-check-label" htmlFor="hasResponsePlanNo">No</label>
          </div>
        </div>
      </div>
      <div className="mb-3">
        <label className="form-label">6. Has Firewalls</label>
        <div>
          <div className="form-check">
            <input 
              type="radio" 
              className="form-check-input" 
              id="firewallsYes" 
              name="firewalls" 
              value="Yes" 
              checked={hasFirewalls === 'Yes'}
              onChange={() => setHasFirewalls('Yes')}
            />
            <label className="form-check-label" htmlFor="firewallsYes">Yes</label>
          </div>
          <div className="form-check">
            <input 
              type="radio" 
              className="form-check-input" 
              id="firewallsNo" 
              name="firewalls" 
              value="No" 
              checked={hasFirewalls === 'No'}
              onChange={() => setHasFirewalls('No')}
            />
            <label className="form-check-label" htmlFor="firewallsNo">No</label>
          </div>
        </div>
      </div>
      <div className="mb-3">
        <label className="form-label">7. Has Multi-Factor Authentication</label>
        <div>
          <div className="form-check">
            <input 
              type="radio" 
              className="form-check-input" 
              id="multiFactAuthenticYes" 
              name="multiFactAuthentic" 
              value="Yes" 
              checked={hasMultiFactAuthentic === 'Yes'}
              onChange={() => setHasMultiFactAuthentic('Yes')}
            />
            <label className="form-check-label" htmlFor="multiFactAuthenticYes">Yes</label>
          </div>
          <div className="form-check">
            <input 
              type="radio" 
              className="form-check-input" 
              id="MultiFactAuthenticNo" 
              name="multiFactAuthentic" 
              value="No" 
              checked={hasMultiFactAuthentic === 'No'}
              onChange={() => setHasMultiFactAuthentic('No')}
            />
            <label className="form-check-label" htmlFor="multiFactAuthenticNo">No</label>
          </div>
        </div>
      </div>
      <div className="mb-3">
        <label htmlFor="dataType" className="form-label">8. Data Type</label>
        <input 
          type="text" 
          className="form-control" 
          id="dataType" 
          value={dataType} 
          onChange={(e) => setDataType(e.target.value)} 
          required 
        />
      </div>
      <div className="mb-3">
        <label htmlFor="dataVolume" className="form-label">9. Data Volume in number of users</label>
        <input 
          type="range" 
          className="form-range" 
          id="dataVolume" 
          value={dataVolume} 
          onChange={(e) => setDataVolume(e.target.value)} 
          min="0" 
          max="10000" 
          step="1" 
        />
        <div>Volume: {dataVolume}</div>
      </div>
      <div className="mb-3">
        <label className="form-label">10. Cyber Attack History</label>
        <div>
          <div className="form-check">
            <input 
              type="radio" 
              className="form-check-input" 
              id="cyberAttackYes" 
              name="cyberAttackHistory" 
              value="Yes" 
              checked={cyberAttackHistory === 'Yes'}
              onChange={() => setCyberAttackHistory('Yes')}
            />
            <label className="form-check-label" htmlFor="cyberAttackYes">Yes</label>
          </div>
          <div className="form-check">
            <input 
              type="radio" 
              className="form-check-input" 
              id="cyberAttackNo" 
              name="cyberAttackHistory" 
              value="No" 
              checked={cyberAttackHistory === 'No'}
              onChange={() => setCyberAttackHistory('No')}
            />
            <label className="form-check-label" htmlFor="cyberAttackNo">No</label>
          </div>
        </div>
      </div>
      <button type="submit" className="btn btn-primary">Submit</button>
    </form>
  );
}

export default CompanyRiskForm;
